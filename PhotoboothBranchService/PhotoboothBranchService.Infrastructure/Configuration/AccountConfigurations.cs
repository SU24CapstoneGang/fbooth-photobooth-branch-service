using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using PhotoboothBranchService.Domain.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PhotoboothBranchService.Infrastructure.Configuration;

public class AccountConfigurations : IEntityTypeConfiguration<Accounts>
{
    public void Configure(EntityTypeBuilder<Accounts> builder)
    {
        builder.ToTable("Accounts");
        builder.HasKey(u => u.Id);

        builder.Property(u => u.Id).HasColumnName("Account ID")
            .ValueGeneratedNever(); // Specify that the Id is not generated by the database

        builder.Property(u => u.EmailAddress).IsRequired().HasMaxLength(250);
        builder.Property(u => u.PhoneNumber).HasMaxLength(20);
        builder.Property(u => u.Password).IsRequired();
        builder.Property(a => a.Role)
               .IsRequired()
               .HasConversion<int>(); // Convert enum to int for storage

        builder.Property(a => a.Status)
               .IsRequired()
               .HasConversion<int>(); // Convert enum to int for storage
    }
}
