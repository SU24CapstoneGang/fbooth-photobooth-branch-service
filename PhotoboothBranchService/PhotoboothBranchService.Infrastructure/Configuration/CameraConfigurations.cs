using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using PhotoboothBranchService.Domain.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PhotoboothBranchService.Infrastructure.Configuration;

public class CameraConfigurations : IEntityTypeConfiguration<Cameras>
{
    public void Configure(EntityTypeBuilder<Cameras> builder)
    {
        builder.ToTable("Cameras");

        builder.HasKey(c => c.Id);
        builder.Property(c=>c.Id).HasColumnName("Camera ID")
               .ValueGeneratedNever(); // Specify that the Id is not generated by the database

        builder.Property(c => c.ModelName).HasMaxLength(255).IsRequired();
        builder.Property(c => c.SensorType).HasMaxLength(100).IsRequired();
        builder.Property(c => c.Lens).HasMaxLength(255);
        builder.Property(c => c.Price);

        builder.Property(a => a.Created)
            .ValueGeneratedOnAdd()
            .HasDefaultValue(DateTime.UtcNow)
            .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);

        /*   builder.HasOne(a => a.PhotoBoothBranch)
               .WithOne()
               .HasForeignKey<Cameras>(p => p.PhotoBoothBranchId)
               .IsRequired(false);*/
    }
}
