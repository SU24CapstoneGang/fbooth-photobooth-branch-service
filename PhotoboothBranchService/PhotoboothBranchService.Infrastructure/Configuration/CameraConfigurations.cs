using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using PhotoboothBranchService.Domain.Entities;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PhotoboothBranchService.Infrastructure.Configuration;

public class CameraConfigurations : IEntityTypeConfiguration<Cameras>
{
    public void Configure(EntityTypeBuilder<Cameras> builder)
    {
        builder.ToTable("Cameras");

        builder.HasKey(c => c.Id);
        builder.Property(c=>c.Id)
               .ValueGeneratedNever(); // Specify that the Id is not generated by the database

        builder.Property(c => c.ModelName).HasMaxLength(255).IsRequired();
        builder.Property(c => c.SensorType).HasMaxLength(100).IsRequired();
        builder.Property(c => c.Lens).HasMaxLength(255);

        // Configure enums
        builder.Property(c => c.Status)
               .IsRequired()
               .HasConversion<int>(); // Convert enum to int for storage

        // Configure one-to-one relationship
        builder.HasOne(c => c.DeviceMap)
               .WithOne(d => d.Camera)
               .HasForeignKey<Cameras>(c => c.DeviceMap.Id)
               .IsRequired();
    }
}
